name: Deploy

on:
  workflow_call:
    inputs:
        PROFILE:
            description: Profile to be activated in maven
            type: string
            required: true
        BRANCH:
            description: Branch to deploy from
            type: string
            required: true
            default: 'dev'
        ENVIRONMENT: 
            description: Selected environment
            type: string
            required: true
            default: 'dev'
        REPOSITORY_URL:
            description: Repository to push the package
            type: string
            required: true
        SERVER_ID:
            description: Branch to deploy from
            type: string
            required: true
        SERVER_USERNAME: 
            type: string
            required: true
        SERVER_PASSWORD: 
            type: string
            required: true

permissions:
  contents: write
  packages: write

jobs:
  deploy:
    environment: ${{ inputs.ENVIRONMENT }}
    name: Deploy package
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v3

      - name: Setup environmental variables
        id: var-setup
        run: source ./.github/workflows/reusable/setup-env-var/snapshot-env
        shell: bash

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ steps.var-setup.outputs.JAVA_VERSION }}
          distribution: ${{ steps.var-setup.outputs.JAVA_DISTRIBUTION }}
          cache: maven

      - uses: ./.github/workflows/reusable/composite/maven-settings
        with: 
            REPOSITORY_URL: ${{ inputs.REPOSITORY_URL }} 
            SERVER_ID: ${{ inputs.SERVER_ID }}
            SERVER_USERNAME: ${{ inputs.SERVER_USERNAME }}
            SERVER_PASSWORD: ${{ inputs.GITHUB_TOKEN }}

      - name: Configure git bot
        run: | 
            echo "env: " ${{ inputs.ENVIRONMENT }}
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"

      - name: Deploy package to ${{ secrets.SERVER_ID }} 
        run: |
          git fetch
          git checkout ${{inputs.BRANCH}}
          mvn -P ${{ inputs.PROFILE }} clean deploy

  failed-deploy-notification:
    name: Send deploy error message to Teams channel
    needs: deploy
    if: failure()
    uses: ./.github/workflows/teams-int.yml
    

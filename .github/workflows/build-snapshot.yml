name: Build Snapshot

on:
  push:
    branches:
      'dev-*'
  pull_request_target:
      types:
        - closed
      branches:
        - 'dev'
  workflow_dispatch:

permissions:
  packages: write
  contents: write
  
jobs:
  dump:
    name: Dump workflow context
    uses: ./.github/workflows/dump-context.yml    

  build:
    name: Build & Test
    runs-on: ubuntu-latest
    environment: dev
    steps: 
      - uses: actions/checkout@v3

      - name: Setup environmental variables
        id: var-setup
        run: source ./.github/workflows/reusable/setup-env-var/snapshot-env
        env: 
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME}}
          SERVER_PASSWORD: ${{ secrets.GITHUB_TOKEN}}
        shell: bash

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ steps.var-setup.outputs.JAVA_VERSION }}
          distribution: ${{ steps.var-setup.outputs.JAVA_DISTRIBUTION }}
          cache: maven
          
      - uses: ./.github/workflows/reusable/composite/maven-settings
        with: 
            REPOSITORY_URL: ${{ secrets.REPOSITORY_URL }} 
            SERVER_ID: ${{ secrets.SERVER_ID }}
            SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
            SERVER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Build & Test
        run: |
          mvn -P snapshot clean install ${{ steps.var-setup.outputs.MAVEN_OPTS }}
      
  deploy:

    needs: build
    uses: ./.github/workflows/deploy.yml
    with: 
      PROFILE: "snapshot"
      BRANCH: "dev"
      ENVIRONMENT: "dev"
         
  setNextDevIteration:
    runs-on: ubuntu-latest
    name: Set next dev iteration
    needs: deploy
    if: success()
    steps: 
      - uses: actions/checkout@v3
      
      - name: Setup environmental variables
        id: var-setup
        run: source ./.github/workflows/reusable/setup-env-var/snapshot-env
        env: 
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME}}
          SERVER_PASSWORD: ${{ secrets.GITHUB_TOKEN}}
        shell: bash
      
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'zulu'
          cache: maven
      
      - name: Configure git bot
        run: | 
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      
      - uses: ./.github/workflows/reusable/composite/maven-settings
        with: 
            REPOSITORY_URL: ${{ secrets.REPOSITORY_URL }} 
            SERVER_ID: ${{ secrets.SERVER_ID }}
            SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
            SERVER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create next dev iteration
        run: |
           mvn -P snapshot build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}-SNAPSHOT
           MVN_ARTIFACT_ID=$(./.github/workflows/reusable/scripts/get-artifact.sh)
           VERSION=$(./.github/workflows/reusable/scripts/get-version.sh)
           MAJOR=$(cut -d'.' -f1 <<<"$VERSION") MINOR=$(cut -d'.' -f2 <<<"$VERSION")
           mvn -P snapshot versions:update-parent -DparentVersion=[$MAJOR.$MINOR.0-SNAPSHOT,$MAJOR.$MINOR.999-SNAPSHOT] -DallowSnapshots=true -DgenerateBackupPoms=false
         
      - name: Commit & push
        run: |
          git commit -am "set next snapshot $VERSION"
          git push origin dev
          
  sonar:
    name: Analyse
    needs: build
    uses: ./.github/workflows/sonar.yml
       
  mail:
    name: Share analysis report
    needs: sonar
    if: always()
    uses: ./.github/workflows/mail.yml

  field-build-notification:
    name: Send build error message to Teams channel
    needs: build
    if: failure()
    uses: ./.github/workflows/teams-int.yml
    
